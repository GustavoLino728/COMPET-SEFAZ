version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Django Backend
  django:
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "${API_PORT}:8000"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE}
      - DJANGO_DEBUG=${DJANGO_DEBUG}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    volumes:
      - ./back:/app
      - ./chatbot:/chatbot
      - huggingface_cache:/root/.cache/huggingface
      - ./chatbot/app/data:/app/chatbot/app/data
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8000"

  # Chatbot Service (optional, for separate processing)
  # chatbot:
  #   build:
  #     context: ./chatbot
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./chatbot:/app
  #     - ./data:/data
  #   environment:
  #     - PYTHONPATH=/app
  #   command: python app/main_rag.py

volumes:
  postgres_data:
  huggingface_cache: